# Build Pipeline for Suil Project
image: suilteam/mecury:latest

variables:
  SUIL_BUILD_VERSION: $SUIL_MAJOR_VERSION.$SUIL_MINOR_VERSION.$SUIL_PATCH_VERSION-$SUIL_VERSION_TAG

# Build alpine development image based of docker
build:dev:
  stage: build
  tags:
    - alpine
  only:
    - master
  # Install all the required dependencies before proceeding to build
  before_script:
    - docker login -u $SUILTEAM_DOCKERHUB_USER -p $SUILTEAM_DOCKERHUB_PASSWD
    
  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION 
       -DSUIL_BUILD_NUMBER=$CI_JOB_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean install
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-dev:latest .
    - docker push suilteam/suil-dev:latest
    - cd ..

  cache:
    paths:
      - ./build$CI_COMMIT_TAG/
  artifacts:
    paths:
      - ./build$CI_COMMIT_TAG/sut
    expire_in: 30 mins
    
build:prod:
  stage: build
  tags:
    - alpine
  only:
    - master

  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION 
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=OFF
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DSUIL_BUILD_UNIT_TEST=OFF
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean install
    - cp -r ../Dockerfile.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t "$CI_REGISTRY_IMAGE:unstable" .
    - docker push "$CI_REGISTRY_IMAGE:unstable"
    - cd ..

  cache:
    paths:
      - ./build$CI_COMMIT_TAG/
  artifacts:
    paths:
      - ./build$CI_COMMIT_TAG/sut
    expire_in: 30 mins
    
build:release:dev:alpine:
  stage: build
  tags:
    - alpine
  only:
    - tags
  # Install all the required dependencies before proceeding to build
  before_script: 
    - docker login -u $SUILTEAM_DOCKERHUB_USER -p $SUILTEAM_DOCKERHUB_PASSWD    
  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    # Build release binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean install
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t suilteam/suil-dev:$SUIL_BUILD_VERSION .
    - docker push suilteam/suil-dev:$SUIL_BUILD_VERSION

build:release:dev:
  stage: build
  tags:
    - x86_64
  only:
    - tags
    
  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - rm -rf *.tag.gz
    # Build release binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean install package
    # Build debug binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DSUIL_BUILD_UNIT_TEST=OFF
       -DCMAKE_BUILD_TYPE=Debug
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean install package
    - cd ..

  artifacts:
    paths:
      - ./build$CI_COMMIT_TAG/suil*tar.gz

build:release:prod:
  stage: build
  tags:
    - alpine
  only:
    - tags
  script:
    # Build release binaries
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - rm -rf *.tag.gz
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_BUILD_ID
       -DSUIL_BUILD_DEV_PACKAGE=OFF
       -DSUIL_BUILD_UNIT_TEST=OFF
       -DSUIL_BUILD_EXAMPLES=OFF
       -DSUIL_BUILD_DOCKER=OFF
       -DCMAKE_BUILD_TYPE=Release
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean install
    - cp -r ../Dockerfile.alpine ./Dockerfile
    - cp -r ../suilteam.ddns.net.crt ./suilteam.ddns.net.crt
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$SUIL_BUILD_VERSION" .
    - docker push "$CI_REGISTRY_IMAGE:$SUIL_BUILD_VERSION"
    - cd ..
      
test:devel:
  stage: test
  tags:
    - alpine
  only:
    - master
  before_script:
    - docker login -u $SUILTEAM_DOCKERHUB_USER -p $SUILTEAM_DOCKERHUB_PASSWD
  script:
    - docker run --rm -i --name "$CI_COMMIT_REF_SLUG" suilteam/suil-dev:latest /usr/local/bin/sut

test:production:
  stage: test
  tags:
    - alpine
  only:
    - tags
  before_script:
    - docker login -u $SUILTEAM_DOCKERHUB_USER -p $SUILTEAM_DOCKERHUB_PASSWD
  script:
    - docker run --rm -i --name "$CI_COMMIT_REF_SLUG" suilteam/suil-dev:$SUIL_BUILD_VERSION /usr/local/bin/sut
