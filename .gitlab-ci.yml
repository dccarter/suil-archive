# Build Pipeline for Suil Project
image: alpine:latest

variables:
  SUIL_BUILD_VERSION: $SUIL_MAJOR_VERSION.$SUIL_PATCH_VERSION.$SUIL_MINOR_VERSION-$SUIL_VERSION_TAG

build:dev:
  stage: build
  tags:
    - alpine
  only:
    - master
  # Install all the required dependencies before proceeding to build
  before_script: 
    - apk update
    - apk add openssl docker
    - echo "docker login -u $SUIL_REGISTRY_USER -p $SUIL_REGISTRY_PASSWD $CI_REGISTRY"
    - apk add openssh bash cmake sqlite sqlite-dev
    - apk add libressl-dev postgresql-dev
    - apk add bsd-compat-headers gcc g++ make util-linux-dev
    
  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION 
       -DSUIL_BUILD_NUMBER=$CI_JOB_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean
    - make -j2 install
    - cp -r ../Dockerfile.build.alpine ./Dockerfile
    - docker build --pull -t "$CI_REGISTRY_IMAGE/development/$CI_PROJECT_NAME:latest" .
    - docker push "$CI_REGISTRY_IMAGE/development/$CI_PROJECT_NAME:latest"
    - cd ..

  cache:
    paths:
      - ./build$CI_COMMIT_TAG/
  artifacts:
    paths:
      - ./build$CI_COMMIT_TAG/sut
    expire_in: 30 mins

build:release:prod:
  stage: build
  tags:
    - alpine
  only:
    - tags
# Install all the required dependencies before proceeding to build
  before_script: 
    - apk update
    - apk add openssl docker
    - docker login -u "$SUIL_REGISTRY_USER" -p "$SUIL_REGISTRY_PASSWD" "$CI_REGISTRY"
    - apk add openssh bash cmake sqlite sqlite-dev
    - apk add libressl-dev postgresql-dev
    - apk add bsd-compat-headers gcc g++ make util-linux-dev
    
  script:
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - rm -rf *.tag.gz
    # Build runtime binaries
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_JOB_ID
       -DSUIL_BUILD_DEV_PACKAGE=OFF
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean
    - make -j2 install package
    - cp -r ../Dockerfile.alpine ./Dockerfile
    - docker build --pull -t "$CI_REGISTRY_IMAGE/production/$CI_PROJECT_NAME:$SUIL_BUILD_VERSION" .
    - docker push "$CI_REGISTRY_IMAGE/production/$CI_PROJECT_NAME:$SUIL_BUILD_VERSION"
    - cd ..

  artifacts:
    paths:
      - ./build$CI_COMMIT_TAG/sut
      - ./build$CI_COMMIT_TAG/suil*tar.gz

build:release:devel:
  stage: build
  tags:
    - alpine
  only:
    - tags
# Install all the required dependencies before proceeding to build
  before_script:
    - apk update
    - apk add openssl docker
    - docker login -u "$SUIL_REGISTRY_USER" -p "$SUIL_REGISTRY_PASSWD" "$CI_REGISTRY"
    - apk add openssh bash cmake sqlite sqlite-dev
    - apk add libressl-dev postgresql-dev
    - apk add bsd-compat-headers gcc g++ make util-linux-dev

  script:
    # Build development binaries
    - mkdir -p ./build$CI_COMMIT_TAG
    - cd ./build$CI_COMMIT_TAG
    - rm -rf *.tag.gz
    - cmake ..
       -DSUIL_MAJOR_VERSION=$SUIL_MAJOR_VERSION 
       -DSUIL_MINOR_VERSION=$SUIL_MINOR_VERSION 
       -DSUIL_PATCH_VERSION=$SUIL_PATCH_VERSION
       -DSUIL_BUILD_TAG=$SUIL_VERSION_TAG
       -DSUIL_BUILD_NUMBER=$CI_JOB_ID
       -DSUIL_BUILD_DEV_PACKAGE=ON
       -DCMAKE_INSTALL_PREFIX=`pwd`/artifacts
    - make clean
    - make -j2 install package
    - cp -r ../Dockerfile.alpine ./Dockerfile
    - docker build --pull -t "$CI_REGISTRY_IMAGE/development/$CI_PROJECT_NAME:$SUIL_BUILD_VERSION" .
    - docker push "$CI_REGISTRY_IMAGE/development/$CI_PROJECT_NAME:$SUIL_BUILD_VERSION"
    - cd ..

  artifacts:
    paths:
      - ./build$CI_COMMIT_TAG/suil*tar.gz
      
test:devel:
  stage: test
  tags:
    - alpine
  only:
    - master
  before_script:
    - apk update
    - apk add openssl libressl postgresql docker
    - apk add sqlite musl libstdc++ libuuid
    - docker login -u "$SUIL_REGISTRY_USER" -p "$SUIL_REGISTRY_PASSWD" "$CI_REGISTRY"
  script:
    - echo "docker run --rm --name $CI_COMMIT_REF_SLUG -it $CI_REGISTRY_IMAGE/development/$CI_PROJECT_NAME:latest /usr/local/bin/sut"
    - docker run --rm --name "$CI_COMMIT_REF_SLUG" -it "$CI_REGISTRY_IMAGE/development/$CI_PROJECT_NAME:latest" /usr/local/bin/sut

test:latest:
  stage: test
  tags:
    - alpine
  only:
    - tags
  before_script:
    - apk update
    - apk add openssl libressl postgresql docker
    - apk add sqlite musl libstdc++ libuuid
    - docker login -u "$SUIL_REGISTRY_USER" -p "$SUIL_REGISTRY_PASSWD" "$CI_REGISTRY"
  script:
    - docker run --rm --name "$CI_COMMIT_REF_SLUG" -it "$CI_REGISTRY_IMAGE/development/$CI_PROJECT_NAME:$SUIL_BUILD_VERSION" /usr/local/bin/sut